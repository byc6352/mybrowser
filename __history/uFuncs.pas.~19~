unit uFuncs;

interface
uses
  windows,sysutils,strutils,classes,uconfig;
  function saveTofile(filename:string;p:pointer;dwSize:DWORD):boolean;
  function getFilename(workdir:string):string;overload;
  function getFilename(workdir:string;cap:string;ext:string):string;overload;
  function ReversePos(SubStr, S: String): Integer;
  function saveTofile2(filename:string;p:pointer;dwSize:DWORD):boolean;
  function gets(p:pointer;dwSize:DWORD):string;
  function getDataTimeString():string;overload;
  function getDataTimeString(dt:tdatetime):string;overload;
  function my_strtodatetime(str_datetime:string):tdatetime;
  procedure IEEmulator(VerCode: Integer);
implementation
{
10001 (0x2711)	Internet Explorer 10。网页以IE 10的标准模式展现，页面!DOCTYPE无效
10000 (0x02710)	Internet Explorer 10。在IE 10标准模式中按照网页上!DOCTYPE指令来显示网页。Internet Explorer 10 默认值。
9999 (0x270F)	Windows Internet Explorer 9. 强制IE9显示，忽略!DOCTYPE指令
9000 (0x2328)	Internet Explorer 9. Internet Explorer 9默认值，在IE9标准模式中按照网页上!DOCTYPE指令来显示网页。
8888 (0x22B8)	Internet Explorer 8，强制IE8标准模式显示，忽略!DOCTYPE指令
8000 (0x1F40)	Internet Explorer 8默认设置，在IE8标准模式中按照网页上!DOCTYPE指令展示网页
7000 (0x1B58)	使用WebBrowser Control控件的应用程序所使用的默认值，在IE7标准模式中按照网页上!DOCTYPE指令来展示网页。
}
procedure IEEmulator(VerCode: Integer);
var
  RegObj: TRegistry;
begin
  RegObj := TRegistry.Create;
  try
    RegObj.RootKey := HKEY_CURRENT_USER;
    RegObj.Access := KEY_ALL_ACCESS;
    if not RegObj.OpenKey('\SOFTWARE\Microsoft\Internet ' +
        'Explorer\MAIN\FeatureControl\FEATURE_BROWSER_EMULATION', False) then exit;
    try
      RegObj.WriteInteger(ExtractFileName(ParamStr(0)), VerCode
        {10000 compatibility with IE10}); // for other versions read msdn

    finally
      RegObj.CloseKey;
    end;
  finally
    RegObj.Free;
  end;
end;
function my_strtodatetime(str_datetime:string):tdatetime;
var
  fmt: TFormatSettings;
  str_sep,sys_sep,tmp_str:string;
begin
  GetLocaleFormatSettings(GetThreadLocale, fmt);
  str_sep:=midstr(str_datetime,5,1);
  sys_sep:=fmt.DateSeparator;
  tmp_str:=replacestr(str_datetime,str_sep,sys_sep);
  result:=strtodatetime(tmp_str);
end;
function getDataTimeString(dt:tdatetime):string;
var
  s:string;
begin
  result:=FormatDateTime('yyyy-mm-dd hh:nn:ss',dt);
end;
function getDataTimeString():string;
var
  s:string;
begin
  result:=FormatDateTime('yyyy-mm-dd hh:nn:ss',now());
end;
function gets(p:pointer;dwSize:DWORD):string;
var
  ms:TMemoryStream;
  ss:tstrings;
begin
  result:='';
  if(debug)then exit;

  ms := TMemoryStream.Create;
  ss:=tstringlist.Create;
  ms.Write(p^,dwSize);
  ms.Position:=0;
  try
  ss.LoadFromStream(ms,tEncoding.UTF8);
  result:=ss.Text;
  except
    result:='';
  end;
  ss.Free;
  ms.Free;

end;
function saveTofile2(filename:string;p:pointer;dwSize:DWORD):boolean;
var
  ss:tstrings;
  s:string;
begin
  ss:=tstringlist.Create;
  //setlength(s,dwSize);
  //copymemory(@s[1],p,dwSize);
  ss.Text:=pchar(p);
  ss.SaveToFile(filename,Tencoding.UTF8);
  ss.Free;
end;
function saveTofile(filename:string;p:pointer;dwSize:DWORD):boolean;
var
  hFile:cardinal;
  num:DWORD;
begin
  result:=false;
   hFile := CreateFile(pchar(filename), GENERIC_WRITE, FILE_SHARE_WRITE, nil, CREATE_ALWAYS, 0, 0);
    if (hFile = INVALID_HANDLE_VALUE)then  exit;
  result:=WriteFile(hFile,p^,dwSize,num,nil);
  closehandle(hFile);
end;
function getFilename(workdir:string;cap:string;ext:string):string;
var
  i:integer;
begin
  randomize();
  i:=random(10);
  result:=workdir+'\'+cap+FormatDateTime('yyyymmddhhnnsszzz',now())+inttostr(i)+ext;
end;
function ReversePos(SubStr, S: String): Integer;
var
  i : Integer;
begin
  i := Pos(ReverseString(SubStr), ReverseString(S));
  if i > 0 then i := Length(S) - i - Length(SubStr) + 2;
  Result := i;
end;
function getFilename(workdir:string):string;
var
  i:integer;
begin
  randomize();
  i:=random(10);
  result:=workdir+'\'+FormatDateTime('yyyymmddhhnnsszzz',now())+inttostr(i)+'.txt';
end;

end.
