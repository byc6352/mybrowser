unit uYinyuetai;

interface
uses
  windows, Winapi.Messages, System.SysUtils,classes,strutils;
//var
  //videoInfoUrl: string;
  function yinyuetai(url:string):boolean;
  procedure downloadThread(videoInfoUrl:string);
  function ThreadProc(param: LPVOID): DWORD; stdcall;
  function parseJsonFile(videoInfoFileName:string):tstrings;
implementation
uses
  System.json,uDown;
//----------------------------------------------音乐台---------------------------------------
function yinyuetai(url:string):boolean;
const
  VIDEO_URL='v.yinyuetai.com/video'; //音乐台视频地址；
  VIDEO_INF_URL='http://ext.yinyuetai.com/main/get-h-mv-info?json=true&videoId='; //音乐台视频信息地址
var
  jsonObject: TJSONObject; // JSON类
  i,j: Integer; // 循环变量
  tmp,videoID,videoInfoUrl: string; // 临时使用变量 ,视频ID，视频信息地址
  jsonArray: TJSONArray; // JSON数组变量
  subJsonObject: TJSONObject;
  ss:tstrings;
begin
  result:=false;
  i:=pos(VIDEO_URL,url);
  if(i=0)then exit;
  videoID:=rightstr(url,7);
  videoInfoUrl:=VIDEO_INF_URL+videoID;
  downloadThread(videoInfoUrl);
end;
function parseJsonFile(videoInfoFileName:string):tstrings;
var
  jsonObject: TJSONObject; // JSON类
  i,j: Integer; // 循环变量
  temp: string; // 临时使用变量
  jsonArray: TJSONArray; // JSON数组变量
  subJsonObject: TJSONObject;
  ss:tstrings;
begin
  jsonObject := nil;
  try
    ss:=tstringlist.Create;
    ss.LoadFromFile(videoInfoFileName,TEncoding.UTF8);
    temp:=ss.Text;
    i:=pos('(',temp);
    j:=pos(')',temp);
    if(i>0)then temp:=MidStr(temp,i+1,j-i-1);
    jsonObject :=TJSONObject.ParseJSONValue(TEncoding.UTF8.GetBytes(temp), 0) as TJSONObject;
    if(jsonObject=nil)then exit;
    if jsonObject.Count = 0 then exit;
  finally
    //ss.Free;
    jsonObject.Free;
  end;
  end;
end;
//------------------------------------------下载线程区------------------------------------------
function ThreadProc(param: LPVOID): DWORD; stdcall;
var
  url,localfilename:string;
  ss:tstrings;
begin
  url:=pchar(param);
  localfilename:=uDown.downloadfile(url);
  if(localfilename='')then exit;
  PostMessage(mForm, WM_DOWN_FILE,1,idx);
  Result := 0;
end;
procedure downloadThread(videoInfoUrl:string);
var
  threadId: TThreadID;
begin

  CreateThread(nil, 0, @ThreadProc, pchar(videoInfoUrl), 0, threadId);
end;

end.
