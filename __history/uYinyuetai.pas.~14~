unit uYinyuetai;

interface
uses
  windows, Winapi.Messages, System.SysUtils,classes,strutils;
type
  stVideoInfo=record
    videoCount:integer;
    videoName:string;
    qualityLevel:array[0..5] of string;
    videoUrl:array[0..5] of string;
  end;
var
  msg: string;
  function yinyuetai(url:string):boolean;
  procedure downloadThread(videoInfoUrl:string);
  function ThreadProc(param: LPVOID): DWORD; stdcall;
  function parseJsonFile(videoInfoFileName:string;var videoInfo:stVideoInfo):boolean;
implementation
uses
  System.json,uDown,uConfig,uFuncs;
//----------------------------------------------音乐台---------------------------------------
function yinyuetai(url:string):boolean;
const
  VIDEO_URL='v.yinyuetai.com/video'; //音乐台视频地址；
  VIDEO_INF_URL='http://ext.yinyuetai.com/main/get-h-mv-info?json=true&videoId='; //音乐台视频信息地址
var
  jsonObject: TJSONObject; // JSON类
  i,j: Integer; // 循环变量
  temp,videoID,videoInfoUrl,qualityLevel: string; // 临时使用变量 ,视频ID，视频信息地址
  jsonArray: TJSONArray; // JSON数组变量
  subJsonObject: TJSONObject;
  ss:tstrings;
  videoInfo:stVideoInfo;
begin
  result:=false;
  temp:=url;
  i:=pos(VIDEO_URL,temp);
  if(i=0)then exit;
  i:=pos('?',temp);
  if(i>0)then temp:=leftstr(temp,i-1);
  videoID:=rightstr(temp,7);
  videoInfoUrl:=VIDEO_INF_URL+videoID;
  downloadThread(videoInfoUrl);
end;
function parseJsonFile(videoInfoFileName:string;var videoInfo:stVideoInfo):boolean;
var
  jsonObject: TJSONObject; // JSON类
  i,j,k: Integer; // 循环变量
  temp,videoUrl,videoName,qualityLevel: string; // 临时使用变量
  jsonArray: TJSONArray; // JSON数组变量
  subJsonObject: TJSONObject;
  ss:tstrings;
begin
  jsonObject := nil;
  result:=false;
  videoInfo.videoCount:=0;
  if not fileexists(videoInfoFileName) then exit;

  try
    ss:=tstringlist.Create;
    ss.LoadFromFile(videoInfoFileName,TEncoding.UTF8);
    temp:=ss.Text;
    ss.Clear;
    if(pos('{',temp)<>1)then begin
      i:=pos('(',temp);
      j:=pos(')',temp);
      if(i>0)then temp:=MidStr(temp,i+1,j-i-1);
    end;
    jsonObject :=TJSONObject.ParseJSONValue(TEncoding.UTF8.GetBytes(temp), 0) as TJSONObject;
    if(jsonObject=nil)then exit;
    if jsonObject.Count = 0 then exit;
    subJsonObject := TJSONObject(jsonObject.GetValue('videoInfo'));
    if(subJsonObject=nil) or (subJsonObject.Count=0)then exit;
    subJsonObject := TJSONObject(subJsonObject.GetValue('coreVideoInfo'));
    videoName:=subJsonObject.GetValue('videoName').ToString;
    videoName:=replacestr(videoName,'"','');
    videoInfo.videoName:=videoName;
    if(subJsonObject=nil) or (subJsonObject.Count=0)then exit;
    JSONArray := TJSONArray(subJsonObject.GetValue('videoUrlModels'));
    if(JSONArray=nil) or (JSONArray.Size=0)then exit;
    for I := 0 to JSONArray.Size-1 do
    begin
     subJsonObject := TJSONObject(JSONArray.Items[i]);
     if(subJsonObject=nil) or (subJsonObject.Count=0)then continue;
     //qualityLevel
     qualityLevel:=subJsonObject.GetValue('QualityLevelName').ToString;
     qualityLevel:=replacestr(qualityLevel,'"','');
     videoInfo.qualityLevel[i]:=qualityLevel;
     //videoUrl
     videoUrl:=subJsonObject.GetValue('videoUrl').ToString;
     videoUrl:=replacestr(videoUrl,'"','');
     videoUrl:=replacestr(videoUrl,'\/','/');
     k:=pos('?',videoUrl);
     if(k>0)then videoUrl:=leftstr(videoUrl,k-1);
     videoInfo.videoUrl[i]:=videoUrl;
     videoInfo.videoCount:=i+1;
   end;
   result:=true;
  finally
    if(assigned(ss))then ss.Free;
    if(assigned(jsonObject))then jsonObject.Free;
  end;
end;
//------------------------------------------下载线程区------------------------------------------
function ThreadProc(param: LPVOID): DWORD; stdcall;
var
  url,localFileName,fileExt,filename:string;
  videoInfo:stVideoInfo;
  i:integer;
begin
  url:=pchar(param);
  localfilename:=uDown.downloadfile(url); //下载视频信息文件；
  if(localfilename='')then exit;
  if not parseJsonFile(localfilename,videoInfo) then exit; //解析视频信息文件；
  msg:='视频名称：'+videoInfo.videoName+#13#10;
  msg:=msg+'视频数量：'+inttostr(videoInfo.videoCount)+#13#10;
  for I := 0 to videoInfo.videoCount-1 do begin
    msg:=msg+videoInfo.qualityLevel[i]+'：'+videoInfo.videoUrl[i]+#13#10;
  end;
  PostMessage(mForm, WM_DOWN_FILE,2,videoInfo.videoCount);
  for i:=0 to videoInfo.videoCount-1  do begin
    fileExt:=rightstr(videoInfo.videoUrl[i],4);
    filename:=videoInfo.videoName;
    if(not uFuncs.IsValidFileName(filename))then uFuncs.forceValidFileName(filename);
    localFileName:=uConfig.yinyuetaiDir+'\'+filename+'['+videoInfo.qualityLevel[i]+']'+fileExt;
    if(not fileExists(localFileName))then
      uDown.downloadtofile(videoInfo.videoUrl[i],localFileName); //下载视频文件；
  end;
  msg:='视频：'+videoInfo.videoName+'下载完毕!';
  PostMessage(mForm, WM_DOWN_FILE,2,videoInfo.videoCount);
  Result := 0;
end;
procedure downloadThread(videoInfoUrl:string);
var
  threadId: TThreadID;
begin

  CreateThread(nil, 0, @ThreadProc, pchar(videoInfoUrl), 0, threadId);
end;

end.
